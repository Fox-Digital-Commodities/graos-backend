import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { ConfigService } from '@nestjs/config';
import { AppModule } from './app.module';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  const configService = app.get(ConfigService);

  // Configura√ß√£o CORS - Permitindo todas as origens
  app.enableCors({
    origin: '*', // Aceitar requisi√ß√µes de qualquer origem
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization', 'x-whatsapp-instance'],
    credentials: false, // Deve ser false quando origin √© '*'
  });

  // Valida√ß√£o global
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: false, // Permitir campos n√£o listados temporariamente
      transform: true,
      skipMissingProperties: false,
    }),
  );

  // Prefixo global para APIs
  app.setGlobalPrefix('api');

  // Configura√ß√£o Swagger
  const config = new DocumentBuilder()
    .setTitle('Gr√£os API')
    .setDescription('API para processamento de cards de pre√ßos de gr√£os')
    .setVersion('1.0')
    .addTag('upload', 'Endpoints para upload de arquivos')
    .addTag('processing', 'Endpoints para processamento de dados')
    .addTag('cards', 'Endpoints para gerenciamento de cards')
    .addTag('spreadsheet', 'Endpoints para gera√ß√£o de planilhas')
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api/docs', app, document);

  const port = configService.get<number>('app.port') || 3001;
  await app.listen(port, '0.0.0.0');
  
  console.log(`üöÄ Aplica√ß√£o rodando em: http://localhost:${port}`);
  console.log(`üìö Documenta√ß√£o Swagger: http://localhost:${port}/api/docs`);
}
void bootstrap();
